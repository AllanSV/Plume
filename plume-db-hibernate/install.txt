1/ Dans la configuration, configurer la base de données db, par exemple :
# utilisation du pool de connexion hikariCP : https://github.com/brettwooldridge/HikariCP
db."hibernate.connection.provider_class"=org.hibernate.hikaricp.internal.HikariCPConnectionProvider
db."hibernate.hikari.minimumIdle"=1
db."hibernate.hikari.maximumPoolSize"=5
db."hibernate.hikari.leakDetectionThreshold"=30000
db."hibernate.hikari.idleTimeout"=20000
db."hibernate.hikari.dataSourceClassName"=oracle.jdbc.pool.OracleDataSource
# paramètres de connexion à la base (à configurer pour le projet)
db."hibernate.hikari.dataSource.url"="jdbc:oracle:thin:@(DESCRIPTION = (ADDRESS_LIST = (ADDRESS = (PROTOCOL = TCP)(HOST = hdbdora1)(PORT = 1521))) (CONNECT_DATA = (SERVICE_NAME = dgen1)))"
db."hibernate.hikari.dataSource.user"=portalhab_adm
db."hibernate.hikari.dataSource.password"=veg_5623

2/ Ajouter dans le pom.xml la génération des classes pour QuerySQL :
	<build>
		<plugins>
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
3/ Installer le module Guice : install(new ConfModule())



Pour un projet ayant des connexions à plusieurs bases de données, il faut :
- étendre DbExecutor et avoir un DbExecutor par base de données
- Surcharger le constructeur DbExecutor(Config config) et appeler le constructeur this(config, "prefix_de_conf_bdd");
- dans la conf utiliser le prefixe "prefix_de_conf_bdd" par base de données :
	prefix_de_conf_bdd."hibernate.hikari.minimumIdle"=1